syntax = "proto3";

package providers;

// Entities Protos

message ProviderCategory {
  string id = 1;
  int32 laboratoryId = 2;
  int32 providerCategoryId = 3;
  string name = 4;
  bool critical = 5;
  bool qualificationRequired = 6;
  repeated InitialQualificationQuestions initialQualificationQuestions = 7;
  repeated string errors = 8;
}

message Provider {
  string id = 1;
  int32 laboratoryId = 2;
  int32 providerCategoryId = 3;
  string name = 4;
  bool critical = 5;
  bool is_qualificated = 6;
  repeated string errors = 7;
}

message InitialQualificationQuestions {
  string id = 1;
  int32 laboratoryId = 2;
  int32 providerCategoryId = 3;
  string question = 4;
  repeated string errors = 5;
}

// service provider category

service ProviderCategoryService {
  rpc getAll(GetProviderCategoriesRequest) returns (GetProviderCategoriesResponse);
  rpc findOne(GetProviderCategoryRequest) returns (GetProviderCategoryResponse);
  rpc create(CreateProviderCategoryRequest) returns (CreateProviderCategoryResponse);
  rpc update(UpdateProviderCategoryRequest) returns (UpdateProviderCategoryResponse);
  rpc delete(DeleteProviderCategoryRequest) returns (DeleteProviderCategoryResponse);
}

// Requests and Responses

message GetProviderCategoriesRequest {}

message GetProviderCategoriesResponse {
  repeated ProviderCategory providerCategories = 1;
}

message GetProviderCategoryRequest {
  string id = 1;
}

message GetProviderCategoryResponse {
  ProviderCategory providerCategory = 1;
}

message CreateProviderCategoryRequest {
  int32 laboratoryId = 1;
  string name = 2;
  bool critical = 3;
  bool qualificationRequired = 4;
  repeated InitialQualificationQuestions initialQualificationQuestions = 5;
}

message CreateProviderCategoryResponse {
  ProviderCategory providerCategory = 1;
}

message UpdateProviderCategoryRequest {
  string id = 1;
  int32 laboratoryId = 2;
  string name = 3;
  bool critical = 4;
  bool qualificationRequired = 5;
  repeated InitialQualificationQuestions initialQualificationQuestions = 6;
}

message UpdateProviderCategoryResponse {
  ProviderCategory providerCategory = 1;
}

message DeleteProviderCategoryRequest {
  string id = 1;
}

message DeleteProviderCategoryResponse {
  ProviderCategory providerCategory = 1;
}

// service provider

service ProviderService {
  rpc getAll(GetProvidersRequest) returns (GetProvidersResponse);
  rpc findOne(GetProviderRequest) returns (GetProviderResponse);
  rpc create(CreateProviderRequest) returns (CreateProviderResponse);
  rpc update(UpdateProviderRequest) returns (UpdateProviderResponse);
  rpc delete(DeleteProviderRequest) returns (DeleteProviderResponse);
}

// Requests and Responses

message GetProvidersRequest {}

message GetProvidersResponse {
  repeated Provider providers = 1;
  repeated string errors = 2;
  int32 status = 3;
}

message GetProviderRequest {
  string id = 1;
}

message GetProviderResponse {
  Provider provider = 1;
  repeated string errors = 2;
  int32 status = 3;
}

message CreateProviderRequest {
  int32 laboratoryId = 1;
  int32 providerCategoryId = 2;
  string name = 3;
  bool critical = 4;
}

message CreateProviderResponse {
  string id = 1;
  repeated string errors = 2;
  int32 status = 3;
}

message UpdateProviderRequest {
  string id = 1;
  int32 laboratoryId = 2;
  int32 providerCategoryId = 3;
  string name = 4;
  bool critical = 5;
}

message UpdateProviderResponse {
  Provider provider = 1;
  repeated string errors = 2;
  int32 status = 3;
}

message DeleteProviderRequest {
  string id = 1;
}

message DeleteProviderResponse {
  Provider provider = 1;
  repeated string errors = 2;
  int32 status = 3;
}

// service initial qualification questions

service InitialQualificationQuestionsService {
  rpc getAll(GetInitialQualificationQuestionsRequest) returns (GetInitialQualificationQuestionsResponse);
  rpc findOne(GetInitialQualificationQuestionRequest) returns (GetInitialQualificationQuestionResponse);
  rpc create(CreateInitialQualificationQuestionRequest) returns (CreateInitialQualificationQuestionResponse);
  rpc update(UpdateInitialQualificationQuestionRequest) returns (UpdateInitialQualificationQuestionResponse);
  rpc delete(DeleteInitialQualificationQuestionRequest) returns (DeleteInitialQualificationQuestionResponse);
}

// Requests and Responses

message GetInitialQualificationQuestionsRequest {}

message GetInitialQualificationQuestionsResponse {
  repeated InitialQualificationQuestions initialQualificationQuestions = 1;
}

message GetInitialQualificationQuestionRequest {
  string id = 1;
}

message GetInitialQualificationQuestionResponse {
  InitialQualificationQuestions initialQualificationQuestion = 1;
}

message CreateInitialQualificationQuestionRequest {
  int32 laboratoryId = 1;
  int32 providerCategoryId = 2;
  string question = 3;
}

message CreateInitialQualificationQuestionResponse {
  InitialQualificationQuestions initialQualificationQuestion = 1;
}

message UpdateInitialQualificationQuestionRequest {
  string id = 1;
  int32 laboratoryId = 2;
  int32 providerCategoryId = 3;
  string question = 4;
}

message UpdateInitialQualificationQuestionResponse {
  InitialQualificationQuestions initialQualificationQuestion = 1;
}

message DeleteInitialQualificationQuestionRequest {
  string id = 1;
}

message DeleteInitialQualificationQuestionResponse {
  InitialQualificationQuestions initialQualificationQuestion = 1;
}

